{"version":3,"sources":["options/optionsMain.js"],"names":["inpOptions","options","dir","PLACEHOLDER_APP_DIR","name","targetUrl","platform","inferPlatform","arch","inferArch","electronVersion","ELECTRON_VERSION","nativefierVersion","packageJson","version","out","process","cwd","overwrite","asar","conceal","icon","counter","bounce","width","height","minWidth","minHeight","maxWidth","maxHeight","showMenuBar","fastQuit","userAgent","ignoreCertificate","disableGpu","ignoreGpuBlacklist","enableEs3Apis","insecure","flashPluginDir","flashPath","flash","diskCacheSize","inject","ignore","fullScreen","maximize","hideWindowFrame","verbose","disableContextMenu","disableDevTools","crashReporter","tmpdir","zoom","internalUrls","singleInstance","clearCache","appVersion","buildVersion","appCopyright","versionString","win32metadata","ProductName","InternalName","FileDescription","processEnvs","fileDownloadOptions","tray","basicAuthUsername","basicAuthPassword","alwaysOnTop","titleBarStyle","globalShortcuts","log","setLevel","honest","toLowerCase","x","y","globalShortcutsFileContent","fs","readFileSync","JSON","parse","inferOs"],"mappings":"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","file":"optionsMain.js","sourcesContent":["import fs from 'fs';\nimport log from 'loglevel';\n\nimport inferOs from '../infer/inferOs';\nimport normalizeUrl from './normalizeUrl';\nimport packageJson from '../../package.json';\nimport { ELECTRON_VERSION, PLACEHOLDER_APP_DIR } from '../constants';\nimport asyncConfig from './asyncConfig';\n\nconst { inferPlatform, inferArch } = inferOs;\n\n/**\n * Extracts only desired keys from inpOptions and augments it with defaults\n * @param {Object} inpOptions\n * @returns {Promise}\n */\nexport default function(inpOptions) {\n  const options = {\n    dir: PLACEHOLDER_APP_DIR,\n    name: inpOptions.name,\n    targetUrl: normalizeUrl(inpOptions.targetUrl),\n    platform: inpOptions.platform || inferPlatform(),\n    arch: inpOptions.arch || inferArch(),\n    electronVersion: inpOptions.electronVersion || ELECTRON_VERSION,\n    nativefierVersion: packageJson.version,\n    out: inpOptions.out || process.cwd(),\n    overwrite: inpOptions.overwrite,\n    asar: inpOptions.conceal || false,\n    icon: inpOptions.icon,\n    counter: inpOptions.counter || false,\n    bounce: inpOptions.bounce || false,\n    width: inpOptions.width || 1280,\n    height: inpOptions.height || 800,\n    minWidth: inpOptions.minWidth,\n    minHeight: inpOptions.minHeight,\n    maxWidth: inpOptions.maxWidth,\n    maxHeight: inpOptions.maxHeight,\n    showMenuBar: inpOptions.showMenuBar || false,\n    fastQuit: inpOptions.fastQuit || false,\n    userAgent: inpOptions.userAgent,\n    ignoreCertificate: inpOptions.ignoreCertificate || false,\n    disableGpu: inpOptions.disableGpu || false,\n    ignoreGpuBlacklist: inpOptions.ignoreGpuBlacklist || false,\n    enableEs3Apis: inpOptions.enableEs3Apis || false,\n    insecure: inpOptions.insecure || false,\n    flashPluginDir: inpOptions.flashPath || inpOptions.flash || null,\n    diskCacheSize: inpOptions.diskCacheSize || null,\n    inject: inpOptions.inject || null,\n    ignore: 'src',\n    fullScreen: inpOptions.fullScreen || false,\n    maximize: inpOptions.maximize || false,\n    hideWindowFrame: inpOptions.hideWindowFrame,\n    verbose: inpOptions.verbose,\n    disableContextMenu: inpOptions.disableContextMenu,\n    disableDevTools: inpOptions.disableDevTools,\n    crashReporter: inpOptions.crashReporter,\n    // workaround for electron-packager#375\n    tmpdir: false,\n    zoom: inpOptions.zoom || 1.0,\n    internalUrls: inpOptions.internalUrls || null,\n    singleInstance: inpOptions.singleInstance || false,\n    clearCache: inpOptions.clearCache || false,\n    appVersion: inpOptions.appVersion,\n    buildVersion: inpOptions.buildVersion,\n    appCopyright: inpOptions.appCopyright,\n    versionString: inpOptions.versionString,\n    win32metadata: inpOptions.win32metadata || {\n      ProductName: inpOptions.name,\n      InternalName: inpOptions.name,\n      FileDescription: inpOptions.name,\n    },\n    processEnvs: inpOptions.processEnvs,\n    fileDownloadOptions: inpOptions.fileDownloadOptions,\n    tray: inpOptions.tray || false,\n    basicAuthUsername: inpOptions.basicAuthUsername || null,\n    basicAuthPassword: inpOptions.basicAuthPassword || null,\n    alwaysOnTop: inpOptions.alwaysOnTop || false,\n    titleBarStyle: inpOptions.titleBarStyle || null,\n    globalShortcuts: inpOptions.globalShortcuts || null,\n  };\n\n  if (options.verbose) {\n    log.setLevel('trace');\n  } else {\n    log.setLevel('error');\n  }\n\n  if (options.flashPluginDir) {\n    options.insecure = true;\n  }\n\n  if (inpOptions.honest) {\n    options.userAgent = null;\n  }\n\n  if (options.platform.toLowerCase() === 'windows') {\n    options.platform = 'win32';\n  }\n\n  if (\n    options.platform.toLowerCase() === 'osx' ||\n    options.platform.toLowerCase() === 'mac'\n  ) {\n    options.platform = 'darwin';\n  }\n\n  if (options.width > options.maxWidth) {\n    options.width = options.maxWidth;\n  }\n\n  if (options.height > options.maxHeight) {\n    options.height = options.maxHeight;\n  }\n\n  if (typeof inpOptions.x !== 'undefined') {\n    options.x = inpOptions.x;\n  }\n\n  if (typeof inpOptions.y !== 'undefined') {\n    options.y = inpOptions.y;\n  }\n\n  if (options.globalShortcuts) {\n    const globalShortcutsFileContent = fs.readFileSync(options.globalShortcuts);\n    options.globalShortcuts = JSON.parse(globalShortcutsFileContent);\n  }\n\n  return asyncConfig(options);\n}\n"]}